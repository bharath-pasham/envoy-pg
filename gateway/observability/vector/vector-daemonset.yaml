---
# Namespace for Vector
apiVersion: v1
kind: Namespace
metadata:
  name: vector
---
# ServiceAccount for Vector
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: vector
---
# RBAC for Vector
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vector
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces", "nodes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vector
subjects:
- kind: ServiceAccount
  name: vector
  namespace: vector
---
# Vector DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vector
  namespace: vector
spec:
  selector:
    matchLabels:
      app: vector
  template:
    metadata:
      labels:
        app: vector
    spec:
      serviceAccountName: vector
      containers:
      - name: vector
        image: timberio/vector:0.36.0-debian
        args:
        - --config-dir=/etc/vector
        ports:
        - containerPort: 9598
          name: metrics
        env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: config
          mountPath: /etc/vector
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        securityContext:
          runAsUser: 0  # Required for log access
      volumes:
      - name: config
        configMap:
          name: vector-config
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      tolerations:
      - operator: Exists  # Run on all nodes
---
# Vector Service for metrics exposure
apiVersion: v1
kind: Service
metadata:
  name: vector-metrics
  namespace: vector
  labels:
    app: vector
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9598"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: vector
  ports:
  - port: 9598
    targetPort: 9598
    name: metrics
  type: ClusterIP