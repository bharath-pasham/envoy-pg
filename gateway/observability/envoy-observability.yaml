---
# EnvoyProxy configuration with telemetry enabled
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  name: observability-proxy-config
  namespace: envoy-gateway-system
spec:
  telemetry:
    metrics:
      prometheus:
        disable: false
    accessLog:
      disable: false
      settings:
      # JSON formatted logs for structured logging
      - format:
          type: JSON
          json:
            timestamp: "%START_TIME%"
            method: "%REQ(:METHOD)%"
            path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
            protocol: "%PROTOCOL%"
            response_code: "%RESPONSE_CODE%"
            response_flags: "%RESPONSE_FLAGS%"
            bytes_received: "%BYTES_RECEIVED%"
            bytes_sent: "%BYTES_SENT%"
            duration: "%DURATION%"
            upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
            x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
            user_agent: "%REQ(USER-AGENT)%"
            request_id: "%REQ(X-REQUEST-ID)%"
            authority: "%REQ(:AUTHORITY)%"
            upstream_host: "%UPSTREAM_HOST%"
            upstream_cluster: "%UPSTREAM_CLUSTER%"
            downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
            downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
            route_name: "%ROUTE_NAME%"
        sinks:
        - type: File
          file:
            path: /dev/stdout
      # Human-readable logs for debugging
      - format:
          type: Text
          text: |
            [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
            %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
            "%DOWNSTREAM_REMOTE_ADDRESS%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%"
            rt=%DURATION%ms uct=%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%ms
        sinks:
        - type: File
          file:
            path: /dev/stderr
  provider:
    type: Kubernetes
    kubernetes:
      envoyDeployment:
        replicas: 2
        pod:
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "19001"
            prometheus.io/path: "/stats/prometheus"
          labels:
            app.kubernetes.io/component: envoy-proxy
            observability: enabled
---
# Update the GatewayClass to use the new config
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: observability-gateway-class
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: observability-proxy-config
    namespace: envoy-gateway-system
