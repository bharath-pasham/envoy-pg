---
# SecurityPolicy for CORS and security headers
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: cors-security-policy
  namespace: default
  labels:
    app.kubernetes.io/name: security
    app.kubernetes.io/component: security-policy
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    name: demo-gateway
  cors:
    allowOrigins:
    - 'https://frontend.demo.local'
    - 'http://localhost:3000'
    - 'https://*.demo.local'
    allowMethods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
    allowHeaders:
    - Content-Type
    - Authorization
    - X-Request-ID
    - X-Version
    - X-AB-Test
    exposeHeaders:
    - X-Rate-Limit-Limit
    - X-Rate-Limit-Remaining
    - X-Service
    maxAge: 86400s
    allowCredentials: true
---
# SecurityPolicy for adding security headers
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: security-headers-policy
  namespace: default
  labels:
    app.kubernetes.io/name: security-headers
    app.kubernetes.io/component: security-policy
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: service-a-route
  responseHeaders:
    set:
    - name: X-Content-Type-Options
      value: nosniff
    - name: X-Frame-Options
      value: DENY
    - name: X-XSS-Protection
      value: "1; mode=block"
    - name: Strict-Transport-Security
      value: "max-age=31536000; includeSubDomains"
    - name: Content-Security-Policy
      value: "default-src 'self'"
    - name: Referrer-Policy
      value: "strict-origin-when-cross-origin"
---
# Basic authentication example (optional)
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: SecurityPolicy
metadata:
  name: basic-auth-policy
  namespace: default
  labels:
    app.kubernetes.io/name: basic-auth
    app.kubernetes.io/component: security-policy
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: service-a-route
  basicAuth:
    users:
      name: basic-auth-users  # Reference to a Secret
---
# Secret for basic auth users (example)
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth-users
  namespace: default
type: Opaque
data:
  # Format: username:password (base64 encoded)
  # Example: admin:admin123 -> YWRtaW46YWRtaW4xMjM=
  # Example: user:pass456 -> dXNlcjpwYXNzNDU2
  .htpasswd: |
    YWRtaW46JDJ5JDEwJDNOZzhVRnVGSzlGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRkZGCg==