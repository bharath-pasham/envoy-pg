---
# BackendTrafficPolicy for configuring traffic behavior to backends
# Note: This is Envoy Gateway specific CRD
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: service-a-traffic-policy
  namespace: default
  labels:
    app.kubernetes.io/name: service-a
    app.kubernetes.io/component: traffic-policy
spec:
  targetRef:
    group: ""
    kind: Service
    name: service-a
  timeout:
    tcp:
      connectTimeout: 10s
    http:
      requestTimeout: 30s
  retry:
    numRetries: 3
    retryOn:
      httpStatusCodes:
        - 500
        - 502
        - 503
        - 504
      triggers:
        - reset
        - connect-failure
        - retriable-status-codes
    perRetryPolicy:
      timeout: 10s
      backOff:
        baseInterval: 1s
        maxInterval: 10s
  circuitBreaker:
    maxConnections: 100
    maxPendingRequests: 100
    maxRequests: 100
    maxRetries: 3
    consecutiveErrors: 5
    interval: 30s
    baseEjectionTime: 30s
---
apiVersion: gateway.envoyproxy.io/v1alpha1
kind: BackendTrafficPolicy
metadata:
  name: service-b-traffic-policy
  namespace: default
  labels:
    app.kubernetes.io/name: service-b
    app.kubernetes.io/component: traffic-policy
spec:
  targetRef:
    group: ""
    kind: Service
    name: service-b
  timeout:
    tcp:
      connectTimeout: 5s
    http:
      requestTimeout: 60s  # Longer timeout for slow endpoint
  retry:
    numRetries: 2
    retryOn:
      httpStatusCodes:
        - 500
        - 502
        - 503
        - 504
      triggers:
        - reset
        - connect-failure
        - retriable-status-codes
    perRetryPolicy:
      timeout: 20s
      backOff:
        baseInterval: 2s
        maxInterval: 20s
  loadBalancer:
    type: RoundRobin  # Options: RoundRobin, Random, LeastRequest
  healthCheck:
    active:
      type: HTTP
      interval: 10s
      timeout: 3s
      unhealthyThreshold: 3
      healthyThreshold: 2
      http:
        path: /health
        expectedStatuses:
        - 200