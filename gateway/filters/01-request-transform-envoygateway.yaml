apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyPatchPolicy
metadata:
  name: request-transform-filter
  namespace: default
spec:
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    name: demo-gateway
  type: JSONPatch
  jsonPatches:
  - type: "type.googleapis.com/envoy.config.listener.v3.Listener"
    # <-- IMPORTANT: replace the name below with the exact listener name your EnvoyGateway uses.
    # If XDSNameSchemeV2 is enabled the listener will typically be "http-80" (http-<port>).
    name: http-80
    operation:
      op: "replace"
      path: "/filter_chains/0/filters/0/typed_config/http_filters"
      value:
      - name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inlineCode: |
            function envoy_on_request(request_handle)
              -- path
              local path = request_handle:headers():get(":path") or "/"

              -- set customer tier (avoid duplicates)
              local tier = "standard"
              if string.find(path, "/api/premium") then
                tier = "premium"
              elseif string.find(path, "/api/enterprise") then
                tier = "enterprise"
              end
              if not request_handle:headers():get("x-customer-tier") then
                request_handle:headers():add("x-customer-tier", tier)
              end

              request_handle:logInfo("Added headers for path: " .. path .. " correlation_id:" .. correlation_id)
            end
      - name: envoy.filters.http.router
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          suppress_envoy_headers: true
